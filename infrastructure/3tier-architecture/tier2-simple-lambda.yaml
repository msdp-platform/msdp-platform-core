# Tier 2: Simple Lambda Function for API Logic
apiVersion: lambda.aws.upbound.io/v1beta1
kind: Function
metadata:
  name: user-service-lambda
  namespace: user-service
  labels:
    tier: api-logic
    service: user-service
spec:
  forProvider:
    region: eu-west-1
    functionName: user-service-api
    runtime: nodejs18.x
    handler: index.handler
    roleRef:
      name: user-service-lambda-role
    # Simple inline code for testing
    code:
      zipFile: |
        exports.handler = async (event) => {
          return {
            statusCode: 200,
            headers: {
              'Content-Type': 'application/json',
              'Access-Control-Allow-Origin': '*'
            },
            body: JSON.stringify({
              message: 'Hello from Lambda!',
              service: 'user-service-lambda',
              tier: 'api-logic',
              timestamp: new Date().toISOString()
            })
          };
        };
    tags:
      Environment: dev
      Service: user-service
      Tier: api-logic
---
# IAM Role for Lambda
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: user-service-lambda-role
  namespace: user-service
  labels:
    tier: api-logic
    service: user-service
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
    tags:
      Environment: dev
      Service: user-service
      Tier: api-logic
---
# IAM Role Policy Attachment
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: user-service-lambda-basic
  namespace: user-service
spec:
  forProvider:
    roleRef:
      name: user-service-lambda-role
    policyArn: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
