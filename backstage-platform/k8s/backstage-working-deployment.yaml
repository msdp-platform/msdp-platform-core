apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-app-config
  namespace: msdp-platform
data:
  app-config.yaml: |
    app:
      title: MSDP Service Catalog
      baseUrl: http://backstage.msdp.local
      listen:
        host: 0.0.0.0
        port: 3000

    backend:
      baseUrl: http://backstage-api.msdp.local
      listen:
        host: 0.0.0.0
        port: 7007

    auth:
      environment: development
      providers:
        guest: {}

    catalog:
      rules:
        - allow: [Component, System, API, Resource, Location, User, Group]

    integrations:
      github:
        - host: github.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: msdp-platform
  labels:
    app: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      initContainers:
        - name: backstage-init
          image: node:20-alpine
          command:
            - /bin/sh
            - -c
            - |
              echo "ðŸš€ Installing Backstage in AKS..."
              apk add --no-cache git curl
              npm install -g @backstage/create-app
              cd /tmp
              echo "msdp-backstage" | npx @backstage/create-app@latest --skip-install
              cd msdp-backstage
              yarn install
              cp -r . /app/
              echo "âœ… Backstage installed successfully"
          volumeMounts:
            - name: backstage-app
              mountPath: /app
      containers:
        - name: backstage
          image: node:20-alpine
          command:
            - /bin/sh
            - -c
            - |
              cd /app
              cp /config/app-config.yaml ./app-config.local.yaml
              cp /config/app-config.yaml ./packages/app/app-config.local.yaml
              cp /config/app-config.yaml ./packages/backend/app-config.local.yaml
              echo "ðŸš€ Starting Backstage in Kubernetes..."
              yarn start --config app-config.local.yaml
          ports:
            - containerPort: 3000
              name: frontend
            - containerPort: 7007
              name: backend
          env:
            - name: NODE_ENV
              value: "development"
          volumeMounts:
            - name: backstage-app
              mountPath: /app
            - name: backstage-config
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: backstage-app
          emptyDir: {}
        - name: backstage-config
          configMap:
            name: backstage-app-config
---
apiVersion: v1
kind: Service
metadata:
  name: backstage-service
  namespace: msdp-platform
  labels:
    app: backstage
spec:
  selector:
    app: backstage
  ports:
    - name: frontend
      port: 3000
      targetPort: 3000
    - name: backend
      port: 7007
      targetPort: 7007
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backstage-ingress
  namespace: msdp-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: backstage.msdp.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backstage-service
                port:
                  number: 3000
