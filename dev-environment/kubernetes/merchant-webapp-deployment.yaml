# VendaBuddy Merchant WebApp Frontend Deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: merchant-webapp-config
  namespace: dev-santanu
  labels:
    app: merchant-webapp
data:
  # Next.js Environment Variables
  NEXT_PUBLIC_API_URL: "https://api.dev.aztech-msdp.com"
  NEXT_PUBLIC_MERCHANT_API_URL: "https://merchant.dev.aztech-msdp.com"
  NEXT_PUBLIC_USER_API_URL: "https://auth.dev.aztech-msdp.com"
  NEXT_PUBLIC_ORDER_API_URL: "https://orders.dev.aztech-msdp.com"
  NEXT_PUBLIC_PAYMENT_API_URL: "https://payments.dev.aztech-msdp.com"
  
  # VendaBuddy Configuration
  NEXT_PUBLIC_APP_NAME: "VendaBuddy"
  NEXT_PUBLIC_APP_TAGLINE: "Shopify for Local Businesses"
  NODE_ENV: "development"
  NEXT_PUBLIC_ENV: "development"

---
# VendaBuddy Merchant WebApp Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: merchant-webapp
  namespace: dev-santanu
  labels:
    app: merchant-webapp
    component: vendabuddy-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: merchant-webapp
  template:
    metadata:
      labels:
        app: merchant-webapp
        component: vendabuddy-frontend
    spec:
      containers:
      - name: merchant-webapp
        image: node:18-alpine
        ports:
        - containerPort: 3001
        envFrom:
        - configMapRef:
            name: merchant-webapp-config
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "üè™ Starting VendaBuddy Merchant WebApp"
          
          # Create VendaBuddy package.json
          cat > package.json << 'EOF'
          {
            "name": "vendabuddy-merchant-webapp",
            "version": "1.0.0-dev",
            "private": true,
            "scripts": {
              "dev": "next dev -p 3001",
              "build": "next build",
              "start": "next start -p 3001",
              "lint": "next lint"
            },
            "dependencies": {
              "next": "15.0.0",
              "react": "18.2.0",
              "react-dom": "18.2.0",
              "axios": "^1.6.0",
              "@types/node": "^20",
              "@types/react": "^18",
              "@types/react-dom": "^18",
              "typescript": "^5"
            }
          }
          EOF
          
          echo "üì¶ Installing dependencies..."
          npm install --silent
          
          # Create Next.js config
          cat > next.config.js << 'EOF'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            env: {
              NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,
              NEXT_PUBLIC_MERCHANT_API_URL: process.env.NEXT_PUBLIC_MERCHANT_API_URL,
            },
          };
          
          module.exports = nextConfig;
          EOF
          
          # Create VendaBuddy main page
          mkdir -p pages/api
          cat > pages/index.tsx << 'EOF'
          import { useState, useEffect } from 'react';
          import Head from 'next/head';
          
          interface MenuItem {
            id: string;
            name: string;
            category: string;
            price: number;
            currency: string;
            available: boolean;
            description: string;
          }
          
          interface MerchantProfile {
            id: string;
            businessName: string;
            businessType: string;
            country: string;
            currency: string;
            status: string;
          }
          
          export default function VendaBuddyDashboard() {
            const [profile, setProfile] = useState<MerchantProfile | null>(null);
            const [menu, setMenu] = useState<MenuItem[]>([]);
            const [analytics, setAnalytics] = useState<any>(null);
            const [loading, setLoading] = useState(true);
          
            useEffect(() => {
              const fetchData = async () => {
                try {
                  // Fetch merchant profile
                  const profileRes = await fetch(`${process.env.NEXT_PUBLIC_MERCHANT_API_URL}/api/merchants/profile`);
                  const profileData = await profileRes.json();
                  setProfile(profileData.data);
          
                  // Fetch menu items
                  const menuRes = await fetch(`${process.env.NEXT_PUBLIC_MERCHANT_API_URL}/api/menu`);
                  const menuData = await menuRes.json();
                  setMenu(menuData.data);
          
                  // Fetch analytics
                  const analyticsRes = await fetch(`${process.env.NEXT_PUBLIC_MERCHANT_API_URL}/api/analytics`);
                  const analyticsData = await analyticsRes.json();
                  setAnalytics(analyticsData.data);
          
                  setLoading(false);
                } catch (error) {
                  console.error('Error fetching data:', error);
                  setLoading(false);
                }
              };
          
              fetchData();
            }, []);
          
            if (loading) {
              return (
                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>
                  <p>Loading VendaBuddy...</p>
                </div>
              );
            }
          
            return (
              <div style={{ fontFamily: 'Arial, sans-serif', padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
                <Head>
                  <title>VendaBuddy - Merchant Dashboard</title>
                  <meta name="description" content="VendaBuddy - Shopify for Local Businesses" />
                </Head>
          
                <header style={{ marginBottom: '40px', textAlign: 'center' }}>
                  <h1 style={{ color: '#059669', fontSize: '3rem', marginBottom: '10px' }}>
                    üè™ VendaBuddy
                  </h1>
                  <p style={{ color: '#6b7280', fontSize: '1.4rem', marginBottom: '10px' }}>
                    Shopify for Local Businesses
                  </p>
                  {profile && (
                    <div style={{ 
                      backgroundColor: '#f0fdf4', 
                      border: '2px solid #22c55e', 
                      borderRadius: '8px', 
                      padding: '15px', 
                      marginTop: '20px',
                      display: 'inline-block'
                    }}>
                      <h2 style={{ margin: '0 0 5px 0', color: '#059669' }}>{profile.businessName}</h2>
                      <p style={{ margin: '0', color: '#6b7280' }}>
                        {profile.businessType} ‚Ä¢ {profile.country} ‚Ä¢ {profile.currency}
                      </p>
                    </div>
                  )}
                </header>
          
                <main>
                  {/* Analytics Section */}
                  {analytics && (
                    <section style={{ marginBottom: '40px' }}>
                      <h2 style={{ color: '#1f2937', marginBottom: '20px' }}>üìä Today's Performance</h2>
                      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '20px' }}>
                        <div style={{ backgroundColor: '#fef3c7', border: '2px solid #f59e0b', borderRadius: '8px', padding: '20px', textAlign: 'center' }}>
                          <h3 style={{ margin: '0 0 10px 0', color: '#92400e', fontSize: '2rem' }}>
                            {analytics.currency} {analytics.dailyRevenue}
                          </h3>
                          <p style={{ margin: '0', color: '#6b7280' }}>Daily Revenue</p>
                        </div>
                        
                        <div style={{ backgroundColor: '#dbeafe', border: '2px solid #3b82f6', borderRadius: '8px', padding: '20px', textAlign: 'center' }}>
                          <h3 style={{ margin: '0 0 10px 0', color: '#1e40af', fontSize: '2rem' }}>
                            {analytics.ordersToday}
                          </h3>
                          <p style={{ margin: '0', color: '#6b7280' }}>Orders Today</p>
                        </div>
                        
                        <div style={{ backgroundColor: '#f3e8ff', border: '2px solid #8b5cf6', borderRadius: '8px', padding: '20px', textAlign: 'center' }}>
                          <h3 style={{ margin: '0 0 10px 0', color: '#7c3aed', fontSize: '2rem' }}>
                            {analytics.currency} {analytics.averageOrderValue}
                          </h3>
                          <p style={{ margin: '0', color: '#6b7280' }}>Avg Order Value</p>
                        </div>
                      </div>
                    </section>
                  )}
          
                  {/* Menu Management Section */}
                  <section style={{ marginBottom: '40px' }}>
                    <h2 style={{ color: '#1f2937', marginBottom: '20px' }}>üçΩÔ∏è Menu Management</h2>
                    <div style={{ backgroundColor: '#f9fafb', border: '1px solid #d1d5db', borderRadius: '8px', padding: '20px' }}>
                      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>
                        <h3 style={{ margin: '0', color: '#1f2937' }}>Your Menu Items</h3>
                        <button style={{ 
                          backgroundColor: '#059669', 
                          color: 'white', 
                          border: 'none', 
                          padding: '10px 20px', 
                          borderRadius: '6px', 
                          cursor: 'pointer',
                          fontWeight: 'bold'
                        }}>
                          + Add New Item
                        </button>
                      </div>
                      
                      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: '20px' }}>
                        {menu.map((item) => (
                          <div
                            key={item.id}
                            style={{
                              backgroundColor: 'white',
                              border: '1px solid #e5e7eb',
                              borderRadius: '8px',
                              padding: '20px',
                            }}
                          >
                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start', marginBottom: '10px' }}>
                              <h4 style={{ margin: '0', color: '#1f2937' }}>{item.name}</h4>
                              <span style={{ 
                                backgroundColor: item.available ? '#dcfce7' : '#fee2e2',
                                color: item.available ? '#166534' : '#dc2626',
                                padding: '4px 8px',
                                borderRadius: '4px',
                                fontSize: '12px',
                                fontWeight: 'bold'
                              }}>
                                {item.available ? 'Available' : 'Unavailable'}
                              </span>
                            </div>
                            <p style={{ margin: '0 0 10px 0', color: '#6b7280', fontSize: '14px' }}>{item.description}</p>
                            <p style={{ margin: '0 0 15px 0', color: '#9ca3af', fontSize: '12px' }}>Category: {item.category}</p>
                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                              <span style={{ fontSize: '18px', fontWeight: 'bold', color: '#059669' }}>
                                {item.currency} {item.price}
                              </span>
                              <button style={{ 
                                backgroundColor: '#f3f4f6', 
                                color: '#374151', 
                                border: '1px solid #d1d5db', 
                                padding: '6px 12px', 
                                borderRadius: '4px', 
                                cursor: 'pointer',
                                fontSize: '12px'
                              }}>
                                Edit
                              </button>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </section>
          
                  {/* Quick Actions */}
                  <section>
                    <h2 style={{ color: '#1f2937', marginBottom: '20px' }}>‚ö° Quick Actions</h2>
                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '20px' }}>
                      <div style={{ backgroundColor: '#fef3c7', border: '2px solid #f59e0b', borderRadius: '8px', padding: '20px' }}>
                        <h3 style={{ margin: '0 0 10px 0', color: '#92400e' }}>üìã View Orders</h3>
                        <p style={{ color: '#6b7280', marginBottom: '15px' }}>Check new orders and update status</p>
                        <button style={{ 
                          backgroundColor: '#f59e0b', 
                          color: 'white', 
                          border: 'none', 
                          padding: '8px 16px', 
                          borderRadius: '4px', 
                          cursor: 'pointer'
                        }}>
                          View Orders
                        </button>
                      </div>
                      
                      <div style={{ backgroundColor: '#dbeafe', border: '2px solid #3b82f6', borderRadius: '8px', padding: '20px' }}>
                        <h3 style={{ margin: '0 0 10px 0', color: '#1e40af' }}>üí≥ Payments</h3>
                        <p style={{ color: '#6b7280', marginBottom: '15px' }}>Track payments and payouts</p>
                        <button style={{ 
                          backgroundColor: '#3b82f6', 
                          color: 'white', 
                          border: 'none', 
                          padding: '8px 16px', 
                          borderRadius: '4px', 
                          cursor: 'pointer'
                        }}>
                          View Payments
                        </button>
                      </div>
                      
                      <div style={{ backgroundColor: '#f0fdf4', border: '2px solid #22c55e', borderRadius: '8px', padding: '20px' }}>
                        <h3 style={{ margin: '0 0 10px 0', color: '#166534' }}>‚öôÔ∏è Settings</h3>
                        <p style={{ color: '#6b7280', marginBottom: '15px' }}>Manage business settings</p>
                        <button style={{ 
                          backgroundColor: '#22c55e', 
                          color: 'white', 
                          border: 'none', 
                          padding: '8px 16px', 
                          borderRadius: '4px', 
                          cursor: 'pointer'
                        }}>
                          Settings
                        </button>
                      </div>
                    </div>
                  </section>
                </main>
          
                <footer style={{ marginTop: '60px', textAlign: 'center', color: '#6b7280', borderTop: '1px solid #e5e7eb', paddingTop: '20px' }}>
                  <p>VendaBuddy - Empowering Local Businesses | Environment: Development</p>
                  <p>üöÄ Shopify for Local Businesses - Built with ‚ù§Ô∏è</p>
                </footer>
              </div>
            );
          }
          EOF
          
          # Create API health check endpoint
          cat > pages/api/health.ts << 'EOF'
          import type { NextApiRequest, NextApiResponse } from 'next';
          
          export default function handler(req: NextApiRequest, res: NextApiResponse) {
            res.status(200).json({
              status: 'healthy',
              service: 'vendabuddy-merchant-webapp',
              version: '1.0.0-dev',
              timestamp: new Date().toISOString(),
              environment: process.env.NODE_ENV || 'development',
            });
          }
          EOF
          
          echo "üè™ Starting VendaBuddy Merchant WebApp..."
          npm run dev -- --hostname 0.0.0.0
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 10

---
# VendaBuddy Merchant WebApp Service
apiVersion: v1
kind: Service
metadata:
  name: merchant-webapp
  namespace: dev-santanu
  labels:
    app: merchant-webapp
spec:
  selector:
    app: merchant-webapp
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
  type: ClusterIP
