services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: msdp-api-gateway-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=dev-jwt-secret-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - LOCATION_SERVICE_URL=http://host.docker.internal:3001
      - MERCHANT_SERVICE_URL=http://host.docker.internal:3002
      - CORS_ORIGIN=http://localhost:3000,http://localhost:4000,http://localhost:4001,http://localhost:4002
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
    volumes:
      # Source code hot reload
      - ./src:/app/src:cached
      - ./package.json:/app/package.json:ro
      # Exclude node_modules from host
      - api_gateway_node_modules:/app/node_modules
    depends_on:
      redis:
        condition: service_started
    networks:
      - msdp-api-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: msdp-api-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - msdp-api-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: msdp-api-redis-commander-dev
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_started
    networks:
      - msdp-api-network
    restart: unless-stopped

volumes:
  redis_data:
    name: msdp_api_redis_data
  api_gateway_node_modules:
    name: msdp_api_gateway_node_modules

networks:
  msdp-api-network:
    driver: bridge
    name: msdp-api-network
