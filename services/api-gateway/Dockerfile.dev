# Multi-stage Dockerfile for API Gateway - Optimized for Development
FROM node:18-alpine AS base

# Install only essential tools for development
RUN apk add --no-cache curl dumb-init && \
  addgroup -g 1001 -S nodejs && \
  adduser -S apigateway -u 1001 -G nodejs

# Set working directory
WORKDIR /app

# Copy package files first (better Docker layer caching)
COPY package*.json ./

# Install dependencies (optimized for development)
RUN npm install && npm cache clean --force

# Copy source code
COPY --chown=apigateway:nodejs . .

# Switch to non-root user
USER apigateway

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "run", "dev"]